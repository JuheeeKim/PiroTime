Index: config/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/settings.py b/config/settings.py
--- a/config/settings.py	
+++ b/config/settings.py	
@@ -38,6 +38,7 @@
     "django.contrib.sessions",
     "django.contrib.messages",
     "django.contrib.staticfiles",
+    "corboard"
 ]
 
 MIDDLEWARE = [
@@ -131,7 +132,20 @@
 
 DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
 
-LOGIN_REDIRECT_URL = '/'
+
+
 LOGOUT_REDIRECT_URL = '/'
 
 AUTH_USER_MODEL = 'accounts.CustomUser'
+
+
+
+# ----------------------------
+#email 관련 설정
+EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
+EMAIL_HOST = 'smtp.gmail.com'
+EMAIL_PORT = 587
+EMAIL_USE_TLS = True
+EMAIL_HOST_USER = 'pirotimeofficial@gmail.com'
+EMAIL_HOST_PASSWORD = 'auee jmge flwt czmn'
+DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/modules.xml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/PiroTime.iml" filepath="$PROJECT_DIR$/PiroTime.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: celery.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/celery.py b/celery.py
new file mode 100644
--- /dev/null	
+++ b/celery.py	
@@ -0,0 +1,13 @@
+# # celery.py
+# from __future__ import absolute_import, unicode_literals
+# import os
+#
+# from celery import Celery
+#
+#
+#
+# os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'corboard.settings')
+#
+# app = Celery('corboard')
+# app.config_from_object('django.conf:settings', namespace='CELERY')
+# app.autodiscover_tasks()
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/inspectionProfiles/Project_Default.xml	
@@ -0,0 +1,24 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyPackageRequirementsInspection" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ignoredPackages">
+        <value>
+          <list size="4">
+            <item index="0" class="java.lang.String" itemvalue="Django" />
+            <item index="1" class="java.lang.String" itemvalue="tzdata" />
+            <item index="2" class="java.lang.String" itemvalue="asgiref" />
+            <item index="3" class="java.lang.String" itemvalue="sqlparse" />
+          </list>
+        </value>
+      </option>
+    </inspection_tool>
+    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ignoredIdentifiers">
+        <list>
+          <option value="corboard.admin.Comment" />
+        </list>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: templates/corboard/corboard_create.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/corboard/corboard_create.html b/templates/corboard/corboard_create.html
new file mode 100644
--- /dev/null	
+++ b/templates/corboard/corboard_create.html	
@@ -0,0 +1,16 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Write a Trend</title>
+</head>
+<body>
+<h1>Create new corporate page</h1>
+<form method="post">
+    {% csrf_token %}
+    {{ form.as_p }}
+    <button type="submit">Submit</button>
+</form>
+<a href="{% url 'corboard:cor_list' %}">Cancel</a>
+</body>
+</html>
\ No newline at end of file
Index: corboard/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/corboard/forms.py b/corboard/forms.py
new file mode 100644
--- /dev/null	
+++ b/corboard/forms.py	
@@ -0,0 +1,14 @@
+from django import forms
+
+from corboard.models import Corboard, Comment
+
+
+class CorboardForm(forms.ModelForm):
+    class Meta:
+        model = Corboard
+        fields = ['title', 'content', 'corboardImg']
+
+class CorCommentForm(forms.ModelForm):
+    class Meta:
+        model = Comment
+        fields = ['content']
\ No newline at end of file
Index: corboard/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/corboard/urls.py b/corboard/urls.py
new file mode 100644
--- /dev/null	
+++ b/corboard/urls.py	
@@ -0,0 +1,22 @@
+from django.urls import path
+from .views import *
+
+app_name = 'corboard'
+
+urlpatterns = [
+    #CRUD
+    path('', cor_list, name='cor_list'),
+    path('crate/', cor_create, name='cor_create'),
+    path('detail/<int:pk>/', cor_detail, name='cor_detail'),
+    path('delete/<int:pk>/', cor_delete, name='cor_delete'),
+    path('update/<int:pk>/', cor_update, name='cor_update'),
+    path('like/<int:pk>/', cor_like, name='cor_like'),
+    #comment
+    path('comment/add/<int:pk>/', cor_add_comment, name='cor_add_comment'),
+    path('comment/delete/<int:pk>/', cor_delete_comment, name='cor_delete_comment'),
+    #etc
+    path('bookmark/<int:pk>/', cor_bookmark, name='cor_bookmark'),
+    path('search/', cor_search, name='cor_search'),
+    path('email<int:pk>/', cor_mail, name='cor_mail'),
+
+]
\ No newline at end of file
Index: templates/corboard/corboard_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/corboard/corboard_list.html b/templates/corboard/corboard_list.html
new file mode 100644
--- /dev/null	
+++ b/templates/corboard/corboard_list.html	
@@ -0,0 +1,21 @@
+<!DOCTYPE html>
+<html>
+<head>
+    <title>Corboard List</title>
+</head>
+<body>
+<h1>Corboard List</h1>
+<a href="{% url 'corboard:cor_create' %}" method="GET">Create New Corboard</a>
+<form method="GET" action="{% url 'corboard:cor_search' %}">
+    <input type="text" name="searchContent" placeholder="Search...">
+    <button type="submit">Search</button>
+</form>
+<ul>
+    {% for corboard in corboards %}
+        <li>
+            <a href="{% url 'corboard:cor_detail' corboard.pk %}">{{ corboard.title }}</a>
+        </li>
+    {% endfor %}
+</ul>
+</body>
+</html>
\ No newline at end of file
Index: corboard/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/corboard/models.py b/corboard/models.py
new file mode 100644
--- /dev/null	
+++ b/corboard/models.py	
@@ -0,0 +1,33 @@
+from django.contrib.auth.models import User
+from django.db import models
+
+# Create your models here.
+from accounts.models import CustomUser
+
+
+class Corboard(models.Model):
+    title = models.CharField(max_length=100)
+    content = models.TextField()
+    date = models.DateTimeField(auto_now_add=True)
+
+    # writer = models.ForeignKey(User, on_delete=models.CASCADE)
+    writer = models.ForeignKey(CustomUser, on_delete=models.CASCADE, null=True, blank=True)
+
+    corboardImg = models.ImageField(null=True, blank=True)
+    likes = models.ManyToManyField(CustomUser, related_name='review_likes', blank=True)
+    bookmarks = models.ManyToManyField(CustomUser, related_name='review_bookmarks', blank=True)
+
+    def count_like(self):
+        return self.likes.count();
+
+class Comment(models.Model):
+    corboard = models.ForeignKey(Corboard, related_name='comments', on_delete=models.CASCADE)
+
+    # writer = models.ForeignKey(User, on_delete=models.CASCADE)
+    writer = models.ForeignKey(CustomUser, on_delete=models.CASCADE, null=True, blank=True)
+
+    content = models.TextField()
+    date = models.DateTimeField(auto_now_add=True)
+
+    def __str__(self):
+        return f'Comment by {self.writer} on {self.review}'
\ No newline at end of file
Index: templates/corboard/corboard_detail.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/corboard/corboard_detail.html b/templates/corboard/corboard_detail.html
new file mode 100644
--- /dev/null	
+++ b/templates/corboard/corboard_detail.html	
@@ -0,0 +1,54 @@
+<!DOCTYPE html>
+<html>
+<head>
+    <title>{{ cor.title }}</title>
+</head>
+<body>
+    <h1>{{ cor.title }}</h1>
+    <p>{{ cor.content }}</p>
+    <p>Written by: {{ cor.writer }}</p>
+    <p>Date: {{ cor.date }}</p>
+    <p>Likes: {{ cor.count_like }}</p>
+    <form action="{% url 'corboard:cor_like' pk=cor.pk %}" method="post">
+        {% csrf_token %}
+        <button type="submit">{% if user in cor.likes.all %}Unlike{% else %}Like{% endif %}</button>
+    </form>
+    <form action="{% url 'corboard:cor_bookmark' pk=cor.pk %}" method="post">
+        {% csrf_token %}
+        <button type="submit">{% if user in cor.bookmarks.all %}Remove Bookmark{% else %}Bookmark{% endif %}</button>
+    </form>
+    {% if cor.writer == user %}
+        <a href="{% url 'corboard:cor_update' pk=cor.pk %}">Edit</a>
+        <form action="{% url 'corboard:cor_delete' pk=cor.pk %}" method="post" style="display:inline;">
+            {% csrf_token %}
+            <button type="submit">Delete</button>
+        </form>
+    {% else %}
+        <a href="{% url 'corboard:cor_mail' pk=cor.pk %}">메일 보내기</a>
+    {% endif %}
+
+    <h2>Comments</h2>
+    <ul>
+        {% for comment in comments %}
+            <li>
+                <p>{{ comment.content }}</p>
+                <p>Written by: {{ comment.writer }} on {{ comment.date }}</p>
+                {% if comment.writer == user %}
+                    <form action="{% url 'corboard:cor_delete_comment' pk=comment.pk %}" method="post" style="display:inline;">
+                        {% csrf_token %}
+                        <button type="submit">Delete</button>
+                    </form>
+                {% endif %}
+            </li>
+        {% endfor %}
+    </ul>
+
+    <h2>Add a Comment</h2>
+    <form method="post" action="{% url 'corboard:cor_add_comment' pk=cor.pk %}">
+        {% csrf_token %}
+        {{ commentForm.as_p }}
+        <button type="submit">Submit</button>
+    </form>
+    <a href="{% url 'corboard:cor_list' %}">Back to list</a>
+</body>
+</html>
\ No newline at end of file
Index: corboard/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/corboard/apps.py b/corboard/apps.py
new file mode 100644
--- /dev/null	
+++ b/corboard/apps.py	
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class CorboardConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'corboard'
Index: corboard/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/corboard/admin.py b/corboard/admin.py
new file mode 100644
--- /dev/null	
+++ b/corboard/admin.py	
@@ -0,0 +1,7 @@
+from django.contrib import admin
+
+# Register your models here.
+from corboard.models import Comment, Corboard
+
+admin.site.register(Comment)
+admin.site.register(Corboard)
\ No newline at end of file
Index: corboard/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/corboard/tests.py b/corboard/tests.py
new file mode 100644
--- /dev/null	
+++ b/corboard/tests.py	
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
Index: corboard/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/corboard/views.py b/corboard/views.py
new file mode 100644
--- /dev/null	
+++ b/corboard/views.py	
@@ -0,0 +1,147 @@
+from django.utils import timezone
+import smtplib
+import ssl
+import certifi
+from django.core.mail import EmailMessage
+from django.http import HttpResponseRedirect, HttpResponse
+from django.shortcuts import render, redirect, get_object_or_404
+from django.shortcuts import render
+from django.urls import reverse
+from django.views.decorators.http import require_POST
+
+from corboard.forms import CorboardForm, CorCommentForm
+from corboard.models import Corboard, Comment
+from django.contrib.auth.decorators import login_required
+# Create your views here.
+
+def cor_list(request):
+    cors = Corboard.objects.all()
+
+    return render(request, 'corboard/corboard_list.html', {'corboards': cors})
+
+
+def cor_create(request):
+    if request.method == "POST":
+        print("createL post")
+        form = CorboardForm(request.POST)
+
+        if form.is_valid():
+            cor = form.save(commit = False)
+            cor.writer = request.user
+            cor.date = timezone.now()
+            cor.save()
+            print("cor_create: form valid")
+            return redirect('corboard:cor_detail', pk = cor.id)
+        return render(request, 'corboard/corboard_create.html', {'form': form})
+    else:
+        print("createL get")
+
+        form = CorboardForm()
+        return render(request, 'corboard/corboard_create.html', {'form': form})
+
+def cor_detail(request, pk):
+    print("cor_detail")
+    cor = get_object_or_404(Corboard, pk=pk)
+    return render(request, 'corboard/corboard_detail.html', {'cor':cor, 'comments': cor.comments.all(), 'commentForm':CorCommentForm()})
+
+@require_POST
+def cor_delete(request, pk):
+    cor = get_object_or_404(Corboard, pk=pk)
+    cor.delete()
+    return redirect("corboard:corboard_list")
+
+def cor_update(request, pk):
+    cor = get_object_or_404(Corboard, pk=pk)
+    if request.method == "GET":
+        form = CorboardForm(instance = cor)
+    else:
+        form = CorboardForm(request.POST, instance=cor)
+        if form.is_vaild():
+            form.save()
+            return redirect("corboard:corboard_detail", pk=form.id)
+    return render(request, 'corboard/corboard_update.html', {'form': form})
+
+@login_required
+def cor_add_comment(request, pk):
+    cor  = get_object_or_404(Corboard, pk=pk)
+    if request.method == "POST":
+        form = CorCommentForm(request.POST)
+        if form.is_valid():
+            comment = form.save(commit=False)
+            comment.date = timezone.now()
+            comment.corboard = cor
+            comment.writer = request.user
+            comment.save()
+            return redirect("corboard:cor_detail", pk = cor.id)
+    else:
+        commentForm = CorCommentForm()
+    return render(request, 'corboard/corboard_detail', {'cor': cor, 'comments': cor.comments.all(), 'commentForm':commentForm})
+
+def cor_delete_comment(request, pk):
+    comment = get_object_or_404(Comment, pk=pk)
+    corboard_id = comment.corboard.id
+    if comment.writer == request.user:
+        comment.delete()
+    return redirect('corboard:cor_detail', pk=corboard_id)
+
+def cor_like(request,  pk):
+    cor = get_object_or_404(Corboard, pk=pk)
+    if cor.likes.filter(id=request.user.id).exists():
+        cor.likes.remove(request.user.id)
+    else:
+        cor.likes.add(request.user)
+    return redirect('corboard:cor_detail', pk=cor.id)
+
+def cor_bookmark(request, pk):
+    cor = get_object_or_404(Corboard, pk=pk)
+    if cor.bookmarks.filter(id=request.user.id).exists():
+        cor.bookmarks.remove(request.user.id)
+    else:
+        cor.bookmarks.add(request.user)
+    return redirect('corboard:cor_detail', pk=cor.id)
+
+def cor_search(request):
+    query = request.GET.get('searchContent')
+    if query:
+        result = Corboard.objects.filter(title__icontains=query) | Corboard.objects.filter(content__icontains=query)
+    else:
+        result = Corboard.objects.none()
+    return render(request, 'corboard/corboard_list.html', {'corboards': result})
+
+def cor_mail(request, pk):
+
+    receiver = get_object_or_404(Corboard, pk=pk).writer
+    sender = request.user
+
+    # if request.method == 'POST':
+
+    subject, message, from_email, recipient_list = generate_email_content(sender, receiver)
+    print("sending email")
+    EmailMessage(subject, message, to=recipient_list, from_email=from_email).send()
+    return HttpResponse('Email sent successfully')
+    # return render(request, 'send_email.html')
+
+# def cor_mail(request, pk):
+#     receiver = get_object_or_404(Corboard, pk=pk).writer
+#     sender = request.user
+#
+#     subject, message, from_email, recipient_list = generate_email_content(sender, receiver)
+#     print("sending email")
+#
+#     # Create a secure SSL context
+#     context = ssl.create_default_context(cafile=certifi.where())
+#
+#     # Create and send email
+#     email = EmailMessage(subject, message, from_email, recipient_list)
+#     email.send(fail_silently=False, auth_user=None, auth_password=None, connection=None, headers=None, cc=None, bcc=None, reply_to=None, attachments=None, alternatives=None, alternatives_subtype='html', auth_host=None, timeout=None, ssl_context=context)
+#
+#     return HttpResponse('Email sent successfully')
+
+
+def generate_email_content(sender, receiver):
+    subject = "PiroTime: 협력 제안이 왔습니다!"
+    message = f"{sender.username}님으로 부터 협력 제안이 왔습니다. PiroTime에 접속해서 내용을 확인하세요!"
+    from_email = 'pirotimeofficial@gmail.com'
+    recipient_list = [receiver.email]
+    return subject, message, from_email, recipient_list
+
Index: accounts/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/accounts/migrations/0001_initial.py b/accounts/migrations/0001_initial.py
--- a/accounts/migrations/0001_initial.py	
+++ b/accounts/migrations/0001_initial.py	
@@ -1,4 +1,4 @@
-# Generated by Django 5.0.7 on 2024-07-31 00:41
+# Generated by Django 5.0.1 on 2024-08-02 06:46
 
 import django.contrib.auth.models
 import django.contrib.auth.validators
Index: corboard/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/corboard/migrations/0001_initial.py b/corboard/migrations/0001_initial.py
new file mode 100644
--- /dev/null	
+++ b/corboard/migrations/0001_initial.py	
@@ -0,0 +1,40 @@
+# Generated by Django 5.0.1 on 2024-08-02 06:46
+
+import django.db.models.deletion
+from django.conf import settings
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Corboard',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('title', models.CharField(max_length=100)),
+                ('content', models.TextField()),
+                ('date', models.DateTimeField(auto_now_add=True)),
+                ('corboardImg', models.ImageField(upload_to='')),
+                ('bookmarks', models.ManyToManyField(blank=True, related_name='review_bookmarks', to=settings.AUTH_USER_MODEL)),
+                ('likes', models.ManyToManyField(blank=True, related_name='review_likes', to=settings.AUTH_USER_MODEL)),
+                ('writer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Comment',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('content', models.TextField()),
+                ('date', models.DateTimeField(auto_now_add=True)),
+                ('writer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
+                ('corboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='corboard.corboard')),
+            ],
+        ),
+    ]
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" project-jdk-name="Python 3.10" project-jdk-type="Python SDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/dbnavigator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dbnavigator.xml b/.idea/dbnavigator.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/dbnavigator.xml	
@@ -0,0 +1,410 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DBNavigator.Project.DatabaseFileManager">
+    <open-files />
+  </component>
+  <component name="DBNavigator.Project.Settings">
+    <connections />
+    <browser-settings>
+      <general>
+        <display-mode value="TABBED" />
+        <navigation-history-size value="100" />
+        <show-object-details value="false" />
+        <enable-sticky-paths value="true" />
+      </general>
+      <filters>
+        <object-type-filter>
+          <object-type name="SCHEMA" enabled="true" />
+          <object-type name="USER" enabled="true" />
+          <object-type name="ROLE" enabled="true" />
+          <object-type name="PRIVILEGE" enabled="true" />
+          <object-type name="CHARSET" enabled="true" />
+          <object-type name="TABLE" enabled="true" />
+          <object-type name="VIEW" enabled="true" />
+          <object-type name="MATERIALIZED_VIEW" enabled="true" />
+          <object-type name="NESTED_TABLE" enabled="true" />
+          <object-type name="COLUMN" enabled="true" />
+          <object-type name="INDEX" enabled="true" />
+          <object-type name="CONSTRAINT" enabled="true" />
+          <object-type name="DATASET_TRIGGER" enabled="true" />
+          <object-type name="DATABASE_TRIGGER" enabled="true" />
+          <object-type name="SYNONYM" enabled="true" />
+          <object-type name="SEQUENCE" enabled="true" />
+          <object-type name="PROCEDURE" enabled="true" />
+          <object-type name="FUNCTION" enabled="true" />
+          <object-type name="PACKAGE" enabled="true" />
+          <object-type name="TYPE" enabled="true" />
+          <object-type name="TYPE_ATTRIBUTE" enabled="true" />
+          <object-type name="ARGUMENT" enabled="true" />
+          <object-type name="DIMENSION" enabled="true" />
+          <object-type name="CLUSTER" enabled="true" />
+          <object-type name="DBLINK" enabled="true" />
+        </object-type-filter>
+      </filters>
+      <sorting>
+        <object-type name="COLUMN" sorting-type="NAME" />
+        <object-type name="FUNCTION" sorting-type="NAME" />
+        <object-type name="PROCEDURE" sorting-type="NAME" />
+        <object-type name="ARGUMENT" sorting-type="POSITION" />
+        <object-type name="TYPE ATTRIBUTE" sorting-type="POSITION" />
+      </sorting>
+      <default-editors>
+        <object-type name="VIEW" editor-type="SELECTION" />
+        <object-type name="PACKAGE" editor-type="SELECTION" />
+        <object-type name="TYPE" editor-type="SELECTION" />
+      </default-editors>
+    </browser-settings>
+    <navigation-settings>
+      <lookup-filters>
+        <lookup-objects>
+          <object-type name="SCHEMA" enabled="true" />
+          <object-type name="USER" enabled="false" />
+          <object-type name="ROLE" enabled="false" />
+          <object-type name="PRIVILEGE" enabled="false" />
+          <object-type name="CHARSET" enabled="false" />
+          <object-type name="TABLE" enabled="true" />
+          <object-type name="VIEW" enabled="true" />
+          <object-type name="MATERIALIZED VIEW" enabled="true" />
+          <object-type name="INDEX" enabled="true" />
+          <object-type name="CONSTRAINT" enabled="true" />
+          <object-type name="DATASET TRIGGER" enabled="true" />
+          <object-type name="DATABASE TRIGGER" enabled="true" />
+          <object-type name="SYNONYM" enabled="false" />
+          <object-type name="SEQUENCE" enabled="true" />
+          <object-type name="PROCEDURE" enabled="true" />
+          <object-type name="FUNCTION" enabled="true" />
+          <object-type name="PACKAGE" enabled="true" />
+          <object-type name="TYPE" enabled="true" />
+          <object-type name="DIMENSION" enabled="false" />
+          <object-type name="CLUSTER" enabled="false" />
+          <object-type name="DBLINK" enabled="true" />
+        </lookup-objects>
+        <force-database-load value="false" />
+        <prompt-connection-selection value="true" />
+        <prompt-schema-selection value="true" />
+      </lookup-filters>
+    </navigation-settings>
+    <dataset-grid-settings>
+      <general>
+        <enable-zooming value="true" />
+        <enable-column-tooltip value="true" />
+      </general>
+      <sorting>
+        <nulls-first value="true" />
+        <max-sorting-columns value="4" />
+      </sorting>
+      <audit-columns>
+        <column-names value="" />
+        <visible value="true" />
+        <editable value="false" />
+      </audit-columns>
+    </dataset-grid-settings>
+    <dataset-editor-settings>
+      <text-editor-popup>
+        <active value="false" />
+        <active-if-empty value="false" />
+        <data-length-threshold value="100" />
+        <popup-delay value="1000" />
+      </text-editor-popup>
+      <values-actions-popup>
+        <show-popup-button value="true" />
+        <element-count-threshold value="1000" />
+        <data-length-threshold value="250" />
+      </values-actions-popup>
+      <general>
+        <fetch-block-size value="100" />
+        <fetch-timeout value="30" />
+        <trim-whitespaces value="true" />
+        <convert-empty-strings-to-null value="true" />
+        <select-content-on-cell-edit value="true" />
+        <large-value-preview-active value="true" />
+      </general>
+      <filters>
+        <prompt-filter-dialog value="true" />
+        <default-filter-type value="BASIC" />
+      </filters>
+      <qualified-text-editor text-length-threshold="300">
+        <content-types>
+          <content-type name="Text" enabled="true" />
+          <content-type name="Properties" enabled="true" />
+          <content-type name="XML" enabled="true" />
+          <content-type name="DTD" enabled="true" />
+          <content-type name="HTML" enabled="true" />
+          <content-type name="XHTML" enabled="true" />
+          <content-type name="CSS" enabled="true" />
+          <content-type name="Java" enabled="true" />
+          <content-type name="SQL" enabled="true" />
+          <content-type name="PL/SQL" enabled="true" />
+          <content-type name="JavaScript" enabled="true" />
+          <content-type name="JSON" enabled="true" />
+          <content-type name="JSON5" enabled="true" />
+          <content-type name="JSP" enabled="true" />
+          <content-type name="JSPx" enabled="true" />
+          <content-type name="Groovy" enabled="true" />
+          <content-type name="FTL" enabled="true" />
+          <content-type name="VTL" enabled="true" />
+          <content-type name="AIDL" enabled="true" />
+          <content-type name="YAML" enabled="true" />
+          <content-type name="Manifest" enabled="true" />
+        </content-types>
+      </qualified-text-editor>
+      <record-navigation>
+        <navigation-target value="VIEWER" />
+      </record-navigation>
+    </dataset-editor-settings>
+    <code-editor-settings>
+      <general>
+        <show-object-navigation-gutter value="false" />
+        <show-spec-declaration-navigation-gutter value="true" />
+        <enable-spellchecking value="true" />
+        <enable-reference-spellchecking value="false" />
+      </general>
+      <confirmations>
+        <save-changes value="false" />
+        <revert-changes value="true" />
+        <exit-on-changes value="ASK" />
+      </confirmations>
+    </code-editor-settings>
+    <code-completion-settings>
+      <filters>
+        <basic-filter>
+          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
+          <filter-element type="RESERVED_WORD" id="function" selected="true" />
+          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
+          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
+          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
+          <filter-element type="OBJECT" id="schema" selected="true" />
+          <filter-element type="OBJECT" id="role" selected="true" />
+          <filter-element type="OBJECT" id="user" selected="true" />
+          <filter-element type="OBJECT" id="privilege" selected="true" />
+          <user-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="false" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </user-schema>
+          <public-schema>
+            <filter-element type="OBJECT" id="table" selected="false" />
+            <filter-element type="OBJECT" id="view" selected="false" />
+            <filter-element type="OBJECT" id="materialized view" selected="false" />
+            <filter-element type="OBJECT" id="index" selected="false" />
+            <filter-element type="OBJECT" id="constraint" selected="false" />
+            <filter-element type="OBJECT" id="trigger" selected="false" />
+            <filter-element type="OBJECT" id="synonym" selected="false" />
+            <filter-element type="OBJECT" id="sequence" selected="false" />
+            <filter-element type="OBJECT" id="procedure" selected="false" />
+            <filter-element type="OBJECT" id="function" selected="false" />
+            <filter-element type="OBJECT" id="package" selected="false" />
+            <filter-element type="OBJECT" id="type" selected="false" />
+            <filter-element type="OBJECT" id="dimension" selected="false" />
+            <filter-element type="OBJECT" id="cluster" selected="false" />
+            <filter-element type="OBJECT" id="dblink" selected="false" />
+          </public-schema>
+          <any-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </any-schema>
+        </basic-filter>
+        <extended-filter>
+          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
+          <filter-element type="RESERVED_WORD" id="function" selected="true" />
+          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
+          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
+          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
+          <filter-element type="OBJECT" id="schema" selected="true" />
+          <filter-element type="OBJECT" id="user" selected="true" />
+          <filter-element type="OBJECT" id="role" selected="true" />
+          <filter-element type="OBJECT" id="privilege" selected="true" />
+          <user-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </user-schema>
+          <public-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </public-schema>
+          <any-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </any-schema>
+        </extended-filter>
+      </filters>
+      <sorting enabled="true">
+        <sorting-element type="RESERVED_WORD" id="keyword" />
+        <sorting-element type="RESERVED_WORD" id="datatype" />
+        <sorting-element type="OBJECT" id="column" />
+        <sorting-element type="OBJECT" id="table" />
+        <sorting-element type="OBJECT" id="view" />
+        <sorting-element type="OBJECT" id="materialized view" />
+        <sorting-element type="OBJECT" id="index" />
+        <sorting-element type="OBJECT" id="constraint" />
+        <sorting-element type="OBJECT" id="trigger" />
+        <sorting-element type="OBJECT" id="synonym" />
+        <sorting-element type="OBJECT" id="sequence" />
+        <sorting-element type="OBJECT" id="procedure" />
+        <sorting-element type="OBJECT" id="function" />
+        <sorting-element type="OBJECT" id="package" />
+        <sorting-element type="OBJECT" id="type" />
+        <sorting-element type="OBJECT" id="dimension" />
+        <sorting-element type="OBJECT" id="cluster" />
+        <sorting-element type="OBJECT" id="dblink" />
+        <sorting-element type="OBJECT" id="schema" />
+        <sorting-element type="OBJECT" id="role" />
+        <sorting-element type="OBJECT" id="user" />
+        <sorting-element type="RESERVED_WORD" id="function" />
+        <sorting-element type="RESERVED_WORD" id="parameter" />
+      </sorting>
+      <format>
+        <enforce-code-style-case value="true" />
+      </format>
+    </code-completion-settings>
+    <execution-engine-settings>
+      <statement-execution>
+        <fetch-block-size value="100" />
+        <execution-timeout value="20" />
+        <debug-execution-timeout value="600" />
+        <focus-result value="false" />
+        <prompt-execution value="false" />
+      </statement-execution>
+      <script-execution>
+        <command-line-interfaces />
+        <execution-timeout value="300" />
+      </script-execution>
+      <method-execution>
+        <execution-timeout value="30" />
+        <debug-execution-timeout value="600" />
+        <parameter-history-size value="10" />
+      </method-execution>
+    </execution-engine-settings>
+    <operation-settings>
+      <transactions>
+        <uncommitted-changes>
+          <on-project-close value="ASK" />
+          <on-disconnect value="ASK" />
+          <on-autocommit-toggle value="ASK" />
+        </uncommitted-changes>
+        <multiple-uncommitted-changes>
+          <on-commit value="ASK" />
+          <on-rollback value="ASK" />
+        </multiple-uncommitted-changes>
+      </transactions>
+      <session-browser>
+        <disconnect-session value="ASK" />
+        <kill-session value="ASK" />
+        <reload-on-filter-change value="false" />
+      </session-browser>
+      <compiler>
+        <compile-type value="KEEP" />
+        <compile-dependencies value="ASK" />
+        <always-show-controls value="false" />
+      </compiler>
+    </operation-settings>
+    <ddl-file-settings>
+      <extensions>
+        <mapping file-type-id="VIEW" extensions="vw" />
+        <mapping file-type-id="TRIGGER" extensions="trg" />
+        <mapping file-type-id="PROCEDURE" extensions="prc" />
+        <mapping file-type-id="FUNCTION" extensions="fnc" />
+        <mapping file-type-id="PACKAGE" extensions="pkg" />
+        <mapping file-type-id="PACKAGE_SPEC" extensions="pks" />
+        <mapping file-type-id="PACKAGE_BODY" extensions="pkb" />
+        <mapping file-type-id="TYPE" extensions="tpe" />
+        <mapping file-type-id="TYPE_SPEC" extensions="tps" />
+        <mapping file-type-id="TYPE_BODY" extensions="tpb" />
+      </extensions>
+      <general>
+        <lookup-ddl-files value="true" />
+        <create-ddl-files value="false" />
+        <synchronize-ddl-files value="true" />
+        <use-qualified-names value="false" />
+        <make-scripts-rerunnable value="true" />
+      </general>
+    </ddl-file-settings>
+    <general-settings>
+      <regional-settings>
+        <date-format value="MEDIUM" />
+        <number-format value="UNGROUPED" />
+        <locale value="SYSTEM_DEFAULT" />
+        <use-custom-formats value="false" />
+      </regional-settings>
+      <environment>
+        <environment-types>
+          <environment-type id="development" name="Development" description="Development environment" color="-2430209/-12296320" readonly-code="false" readonly-data="false" />
+          <environment-type id="integration" name="Integration" description="Integration environment" color="-2621494/-12163514" readonly-code="true" readonly-data="false" />
+          <environment-type id="production" name="Production" description="Productive environment" color="-11574/-10271420" readonly-code="true" readonly-data="true" />
+          <environment-type id="other" name="Other" description="" color="-1576/-10724543" readonly-code="false" readonly-data="false" />
+        </environment-types>
+        <visibility-settings>
+          <connection-tabs value="true" />
+          <dialog-headers value="true" />
+          <object-editor-tabs value="true" />
+          <script-editor-tabs value="false" />
+          <execution-result-tabs value="true" />
+        </visibility-settings>
+      </environment>
+    </general-settings>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/workspace.xml	
@@ -0,0 +1,178 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="41c3d7bd-44eb-42dc-9859-6bdc4bf027d3" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/dbnavigator.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PiroTime.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/celery.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/admin.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/apps.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/forms.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/migrations/0001_initial.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/migrations/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/models.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/tests.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/urls.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/corboard/views.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/templates/corboard/corboard_create.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/templates/corboard/corboard_detail.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/templates/corboard/corboard_list.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/이미지.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/이미지_yrpBRvC.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/accounts/migrations/0001_initial.py" beforeDir="false" afterPath="$PROJECT_DIR$/accounts/migrations/0001_initial.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/config/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/config/settings.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/config/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/config/urls.py" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
+    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="HTML File" />
+        <option value="Python Script" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/manage.py" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/requirements.txt" root0="FORCE_HIGHLIGHTING" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
+  </component>
+  <component name="ProjectId" id="2jzMt6PTawOJtVdgknT9jS4ZpxJ" />
+  <component name="ProjectLevelVcsManager">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
+  <component name="ProjectViewState">
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/mymac/Documents/univ/PiroTime&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;
+  }
+}</component>
+  <component name="RunManager" selected="Python.manage">
+    <configuration name="Unnamed" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="/usr/local/bin/python3.10" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <module name="" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="manage" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="/usr/local/bin/python3.10" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <module name="" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/manage.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <list>
+      <item itemvalue="Python.Unnamed" />
+      <item itemvalue="Python.manage" />
+    </list>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Python.manage" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="41c3d7bd-44eb-42dc-9859-6bdc4bf027d3" name="Changes" comment="" />
+      <created>1722385663660</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1722385663660</updated>
+      <workItem from="1722385665082" duration="688000" />
+      <workItem from="1722386356585" duration="2654000" />
+      <workItem from="1722393797844" duration="104000" />
+      <workItem from="1722393903886" duration="16000" />
+      <workItem from="1722393921809" duration="392000" />
+      <workItem from="1722394321924" duration="475000" />
+      <workItem from="1722394872801" duration="9177000" />
+      <workItem from="1722476012324" duration="42000" />
+      <workItem from="1722515157324" duration="12580000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
+  </component>
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: PiroTime.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PiroTime.iml b/PiroTime.iml
new file mode 100644
--- /dev/null	
+++ b/PiroTime.iml	
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="django" name="Django">
+      <configuration>
+        <option name="rootFolder" value="$MODULE_DIR$/config" />
+        <option name="settingsModule" value="settings.py" />
+        <option name="manageScript" value="manage.py" />
+        <option name="environment" value="&lt;map/&gt;" />
+        <option name="doNotUseTestRunner" value="false" />
+        <option name="trackFilePattern" value="migrations" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="TemplatesService">
+    <option name="TEMPLATE_CONFIGURATION" value="Django" />
+    <option name="TEMPLATE_FOLDERS">
+      <list>
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/jinja2/django/forms" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/jinja2/django/forms/errors/dict" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/jinja2/django/forms/errors/list" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/jinja2/django/forms/widgets" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/jinja2/django/forms/formsets" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/templates/django/forms" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/templates/django/forms/errors/dict" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/templates/django/forms/errors/list" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/templates/django/forms/widgets" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/forms/templates/django/forms/formsets" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/views/templates" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/gis/templates/gis" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/auth/templates/auth/widgets" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/admin/templates/admin" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/admin/templates/admin/auth/user" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/admin/templates/admin/widgets" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/admin/templates/admin/includes" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/admin/templates/admin/edit_inline" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/admin/templates/registration" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/postgres/jinja2/postgres/widgets" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/postgres/templates/postgres/widgets" />
+        <option value="$MODULE_DIR$/myvenv/lib/python3.10/site-packages/django/contrib/admindocs/templates/admin_doc" />
+      </list>
+    </option>
+  </component>
+</module>
\ No newline at end of file
diff --git a/corboard/__init__.py b/corboard/__init__.py
new file mode 100644
diff --git a/corboard/migrations/__init__.py b/corboard/migrations/__init__.py
new file mode 100644
